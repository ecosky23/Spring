<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Connection pool & DataSource 아파치에서 가지고 있는 Connection Pool 가져오기-->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="c##java"/>
		<property name="password" value="bit"/>
		<property name="maxTotal" value="20"/>
		<property name="maxIdle" value="3"/>

	</bean> 
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
	p:driverClassName="oracle.jdbc.driver.OracleDriver"
	p:url="jdbc:oracle:thin:@localhost:1521:xe"
	p:username="c##java"
	p:password="bit"
	p:maxTotal="20"
	p:maxIdle="3"/>
	-->
	
	<!-- 프로퍼티즈의 위치를 알려주는 명령어 -->
	<context:property-placeholder location="classpath:spring/db.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxTotal" value="20"/>
		<property name="maxIdle" value="3"/>
	</bean> 
	
	<!-- user.main -->
	<bean id="helloSpring" class="user.main.HelloSpring"></bean>
	
	<!-- user.service  insert -->
	<bean id="userInsertService" class="user.service.UserInsertService" scope="prototype">
		<property name="userDTO" ref="userDTO"></property>
		<property name="userDAO" ref="userDAOImpl"></property>
	</bean>	
	
	<!-- select -->
	<bean id="userSelectService" class="user.service.UserSelectService">
		<property name="userDAO" ref="userDAOImpl"></property>
	</bean>
	
	<!-- update -->	
	<bean id="userUpdateService" class="user.service.UserUpdateService">
		<property name="userDTO" ref="userDTO"></property>
		<property name="userDAO" ref="userDAOImpl"></property>
	</bean>
	
	<!-- dalete -->	
	<bean id="userDeleteService" class="user.service.UserDeleteService">
		<property name="userDAO" ref="userDAOImpl"></property>
	</bean>	
	
	<!-- userDTO -->
	<bean id="userDTO" class="user.bean.UserDTO" scope="prototype"></bean>
	
	<!-- userDAO -->
	<bean id="userDAOImpl" class="user.dao.UserDAOImpl" scope="prototype">
		<!--<property name="jdbcTemplate" ref="jdbcTemplate"/> set인젝션 만들어주기 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- jdbcTemplate 메모리에 생성 : ConnectionPool preparedStatment Resultset close 다해준다.
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"/> dataSource 참조해서 값을 가져오기 
	</bean>
	-->
</beans>
