<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 핵심 클래스 new -->
	<bean id="messageBeanImpl" class="sample04_Advisor.MessageBeanImpl"></bean>
	
	<!-- 공통 클래스 new-->
	<bean id="loggingBeforeAdvice" class="sample04_Advisor.LoggingBeforeAdvice"></bean>
	<bean id="loggingAfterAdvice" class="sample04_Advisor.LoggingAfterAdvice"></bean>
	
	<!-- MessageBeanImpl에서 study에게만 삽입해라
	<bean id="methodPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedName" value="study"></property> study에게만 넣을 것이다. 
		
	</bean>
	
	 loggingBeforeAdvice와 methodPointcut을 연결시키기
	<bean id="beforeAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="loggingBeforeAdvice"></property>
		<property name="pointcut" ref="methodPointcut"></property> 특정 메소드에만 열결 시키기 
	</bean>
	
	<bean id="afterAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="advice" ref="loggingAfterAdvice"></property>
		<property name="pointcut" ref="methodPointcut"></property> 특정 메소드에만 열결 시키기 
	</bean>-->
	
	<!-- methodPointcut과 beforeAdvisor합쳐서 Before값만 주기 -->
	<bean id="beforeAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="loggingBeforeAdvice"></property>
		<property name="mappedNames" value="study, lesson"></property>
	</bean>
	
	<!-- methodPointcut과 beforeAdvisor합쳐서 After값만 주기 -->
	<bean id="afterAdvisor" class="org.springframework.aop.support.NameMatchMethodPointcutAdvisor">
		<property name="advice" ref="loggingAfterAdvice"></property>
		<property name="mappedNames">
			<list>
				<value>study</value>
				<value>lesson</value>
			</list>
		</property>
	</bean>
	
	
	
	
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean"><!-- aop 공통의 내용을 proxy를 통해 핵심클래스에 집어 넣는다. -->
		<property name="target" ref="messageBeanImpl"></property>
		<property name="interceptorNames">
			<list>
				<value>beforeAdvisor</value>		
				 <value>afterAdvisor</value>
			</list>
		</property>
	</bean>
	
</beans>
